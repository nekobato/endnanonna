// Generated by CoffeeScript 1.6.3
(function() {
  var FONT_FILE, NONNON_DIR, OUTPUT_FILE, TMP_M_DIR, TMP_N_DIR, c_p, create, createMoji, fs, heights, image, mojiConfig, randomId, sh;

  fs = require('fs');

  c_p = require('child_process');

  sh = require('execSync');

  FONT_FILE = "./vendor/rounded-x-mplus-1m-bold.ttf";

  NONNON_DIR = './vendor/nonnons/';

  TMP_M_DIR = './tmp/moji/';

  TMP_N_DIR = './tmp/nonnon/';

  OUTPUT_FILE = './out.gif';

  mojiConfig = {};

  mojiConfig.size = [80, 64, 78, 54, 54, 64, 78];

  mojiConfig.rotate = [-12, -2, -10, -10, -10, -10, 12];

  mojiConfig.geo = ['+0+0', '+70+10', '+120+0', '+180+0', '+230+0', '+280+0', '+335+0'];

  mojiConfig.fill = ['#dd188b', '#dd188b', '#f57315', '#5ac02e', '#5ac02e', '#12a7c5', '#12a7c5'];

  heights = [6, 6, 15, 24, 24, 61, 81, 93, 93, 95, 109, 119, 123, 123, 133, 134, 135, 135];

  create = function(height, file) {
    var geo, top;
    if (file == null) {
      file = 124;
    }
    geo = '+0+' + (74 - height / 2);
    top = "x" + height + "!";
    return console.log("" + file + " is " + done);
  };

  image = {
    moji: function(obj) {
      return sh.run("convert" + " -background none" + (" -font " + FONT_FILE) + (" -pointsize " + obj.pointsize) + (" -fill '" + obj.fill + "'") + (" -stroke '" + obj.fill + "'") + " -strokewidth 2" + (" label:" + obj.label) + " -trim" + (" -rotate " + obj.rotate) + (" " + obj.file));
    },
    expand: function(src, out, height) {
      return sh.run("convert" + (" -geometry x" + height + "!") + (" " + src) + " -trim" + (" " + out));
    },
    append: function(obj, id) {
      var i, s, spliceW, _i, _j, _len, _ref, _ref1, _results;
      spliceW = 0;
      _ref = obj.size;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        spliceW += s - Math.floor(s / 10);
      }
      sh.run(("convert -background none -gravity east -splice " + spliceW + "x") + (" " + TMP_M_DIR + id + "_0.png") + (" " + TMP_M_DIR + id + ".png"));
      _results = [];
      for (i = _j = 1, _ref1 = obj.moji.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {
        _results.push(sh.run(("convert " + TMP_M_DIR + id + ".png " + TMP_M_DIR + id + "_" + i + ".png") + (" -gravity southwest -geometry " + obj.geo[i]) + (" -composite " + TMP_M_DIR + id + ".png")));
      }
      return _results;
    },
    compo: function(src, moji, height, out) {
      var geo;
      geo = '+5+' + (72 - height / 2);
      return sh.run("convert" + (" " + src) + (" " + moji) + " -gravity center" + (" -geometry " + geo) + (" -composite " + out));
    },
    toGif: function(id) {
      return sh.run("convert" + " -delay 7" + " -loop 1" + (" " + TMP_N_DIR + "*.png") + (" ./dist/out/" + id + ".gif"));
    }
  };

  randomId = function(len) {
    var a, n, res, str, _i;
    str = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    a = str.split('');
    res = '';
    for (n = _i = 1; 1 <= len ? _i <= len : _i >= len; n = 1 <= len ? ++_i : --_i) {
      res += a[Math.floor(Math.random() * a.length)];
    }
    return res;
  };

  createMoji = function(obj, id) {
    var i, _i, _ref;
    for (i = _i = 0, _ref = obj.moji.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      image.moji({
        pointsize: obj.size[i],
        fill: obj.fill[i],
        label: obj.moji[i],
        rotate: obj.rotate[i],
        file: "" + TMP_M_DIR + id + "_" + i + ".png"
      });
      if (i === 0 || i === obj.moji.length - 2 || i === obj.moji.length - 1) {
        image.expand("" + TMP_M_DIR + id + "_" + i + ".png", "" + TMP_M_DIR + id + "_" + i + ".png", Math.floor(obj.size[i] * 1.6));
      }
    }
    return image.append(obj, id);
  };

  module.exports = {
    run: function(str, callback) {
      var id;
      mojiConfig.moji = str.split('');
      id = randomId(8);
      TMP_M_DIR = "" + TMP_M_DIR + id + "/";
      createMoji(mojiConfig, id);
      return fs.readdir('./vendor/nonnons', function(err, files) {
        var file, i, number, _i, _len;
        i = 0;
        for (_i = 0, _len = files.length; _i < _len; _i++) {
          file = files[_i];
          if (!(!file.match(/^\./))) {
            continue;
          }
          file.match(/^nonnon([0-9]+)\.png/);
          number = RegExp.$1;
          if ((124 > number && number > 106)) {
            image.expand("" + TMP_M_DIR + id + ".png", "" + TMP_M_DIR + id + "_sh.png", heights[i]);
            image.compo("" + NONNON_DIR + file, "" + TMP_M_DIR + id + "_sh.png", heights[i], "" + TMP_N_DIR + "nonnon" + number + ".png");
            i++;
          } else if (number >= 124) {
            image.compo("" + NONNON_DIR + file, "" + TMP_M_DIR + id + "_sh.png", heights[i], "" + TMP_N_DIR + "nonnon" + number + ".png");
          }
        }
        image.toGif(id);
        console.log(id);
        return callback(id);
      });
    }
  };

}).call(this);
