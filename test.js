// Generated by CoffeeScript 1.6.3
(function() {
  var FONT_FILE, NO_DIR, OUT_DIR, c_p, create, fs, heights, image, mojiConfig, randomId, sh;

  fs = require('fs');

  c_p = require('child_process');

  sh = require('execSync');

  FONT_FILE = "./vendor/rounded-x-mplus-1m-bold.ttf";

  NO_DIR = './vendor/no';

  OUT_DIR = './dist/out';

  mojiConfig = {};

  mojiConfig.size = [80, 64, 78, 54, 54, 64, 78];

  mojiConfig.rotate = [-12, -2, -10, -10, -10, -10, 12];

  mojiConfig.geo = ['+0+0', '+70+10', '+120+0', '+180+0', '+230+0', '+280+0', '+335+0'];

  mojiConfig.fill = ['#dd188b', '#dd188b', '#f57315', '#5ac02e', '#5ac02e', '#12a7c5', '#12a7c5'];

  heights = [6, 6, 15, 24, 24, 61, 81, 93, 93, 95, 109, 119, 123, 123, 133, 134, 135, 135];

  create = function(height, file) {
    var geo, top;
    if (file == null) {
      file = 124;
    }
    geo = '+0+' + (74 - height / 2);
    top = "x" + height + "!";
    return console.log("" + file + " is " + done);
  };

  image = {
    moji: function(obj, out) {
      return sh.run("convert" + " -background none" + (" -font " + FONT_FILE) + (" -pointsize " + obj.pointsize) + (" -fill '" + obj.fill + "'") + (" -stroke '" + obj.fill + "'") + " -strokewidth 2" + (" label:" + obj.label) + " -trim" + (" -rotate " + obj.rotate) + (" " + out));
    },
    expand: function(src, out, height) {
      return sh.run("convert" + (" -geometry x" + height + "!") + (" " + src) + " -trim" + (" " + out));
    },
    ground: function(src, out, splice) {
      return sh.run("convert -background none -gravity east" + (" -splice " + splice + "x") + (" " + src) + (" " + out));
    },
    append: function(src, out, geo) {
      return sh.run(("convert " + out + " " + src) + (" -gravity southwest -geometry " + geo) + (" -composite " + out));
    },
    compo: function(src, moji, height, out) {
      var geo;
      geo = '+5+' + (72 - height / 2);
      return sh.run("convert" + (" " + src) + (" " + moji) + " -gravity center" + (" -geometry " + geo) + (" -composite " + out));
    },
    toGif: function(dir, out) {
      return sh.run("gifsicle" + " --delay=7" + (" ./vendor/no.gif " + dir + "/*.gif") + (" > " + out));
    }
  };

  randomId = function(len) {
    var a, n, res, str, _i;
    str = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    a = str.split('');
    res = '';
    for (n = _i = 1; 1 <= len ? _i <= len : _i >= len; n = 1 <= len ? ++_i : --_i) {
      res += a[Math.floor(Math.random() * a.length)];
    }
    return res;
  };

  module.exports = {
    run: function(str, callback) {
      var i, id, s, splice, tmpMojiDir, tmpNoDir, _i, _j, _len, _ref, _ref1;
      mojiConfig.moji = str.split('');
      id = randomId(8);
      tmpMojiDir = "./tmp/moji/" + id;
      tmpNoDir = "./tmp/no/" + id;
      fs.mkdirSync(tmpMojiDir);
      fs.mkdirSync(tmpNoDir);
      splice = 0;
      _ref = mojiConfig.size;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        splice += s - Math.floor(s / 10);
      }
      for (i = _j = 0, _ref1 = mojiConfig.moji.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
        image.moji({
          pointsize: mojiConfig.size[i],
          fill: mojiConfig.fill[i],
          label: mojiConfig.moji[i],
          rotate: mojiConfig.rotate[i]
        }, "" + tmpMojiDir + "/" + i + ".png");
        if (i === 0 || i === mojiConfig.moji.length - 2 || i === mojiConfig.moji.length - 1) {
          image.expand("" + tmpMojiDir + "/" + i + ".png", "" + tmpMojiDir + "/" + i + ".png", Math.floor(mojiConfig.size[i] * 1.6));
          console.log("" + i + " is expanded");
        }
        if (i === 0) {
          image.ground("" + tmpMojiDir + "/" + i + ".png", "" + tmpMojiDir + "/base.png", splice);
          console.log("" + i + " is ground");
        } else {
          image.append("" + tmpMojiDir + "/" + i + ".png", "" + tmpMojiDir + "/base.png", mojiConfig.geo[i]);
          console.log("" + i + " is appended");
        }
      }
      return fs.readdir('./vendor/no', function(err, files) {
        var file, num, _k, _len1;
        i = 0;
        for (_k = 0, _len1 = files.length; _k < _len1; _k++) {
          file = files[_k];
          if (!(file.match(/^nonnon([0-9]+)\.gif/))) {
            continue;
          }
          console.log(file);
          num = RegExp.$1;
          if ((124 > num && num > 106)) {
            image.expand("" + tmpMojiDir + "/base.png", "" + tmpMojiDir + "/out.png", heights[i]);
            image.compo("" + NO_DIR + "/" + file, "" + tmpMojiDir + "/out.png", heights[i], "" + tmpNoDir + "/nonnon" + num + ".gif");
            i++;
          } else if (num >= 124) {
            image.compo("" + NO_DIR + "/" + file, "" + tmpMojiDir + "/out.png", heights[i], "" + tmpNoDir + "/nonnon" + num + ".gif");
          }
        }
        image.toGif(tmpNoDir, "" + OUT_DIR + "/" + id + ".gif");
        console.log(id);
        return callback(id);
      });
    }
  };

}).call(this);
